<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Yin.Domain</name>
    </assembly>
    <members>
        <member name="P:Yin.Domain.AggregateRoot.AdminUserAggregate.AdminRole.Name">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.AdminUserAggregate.AdminRole.Enabled">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.AdminUserAggregate.AdminRole.Sort">
            <summary>
            排序值
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.AdminUserAggregate.AdminRole.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.AdminUserAggregate.AdminUserRole.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.AdminUserAggregate.AdminUserRole.RoleId">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="T:Yin.Domain.AggregateRoot.MenuAggregate.Moudles">
            <summary>
            接口API地址信息表
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Moudles.Name">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Moudles.Code">
            <summary>
            菜单编号
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Moudles.LinkUrl">
            <summary>
            链接地址
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Moudles.Area">
            <summary>
            区域名称
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Moudles.Controller">
            <summary>
            控制器名称
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Moudles.Action">
            <summary>
            Action名称
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Moudles.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Moudles.IsMenu">
            <summary>
            是否为右侧菜单
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Moudles.Enabled">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Moudles.Sort">
            <summary>
            排序值
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Moudles.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Moudles.ParentId">
            <summary>
            父Id
            </summary>
        </member>
        <member name="T:Yin.Domain.AggregateRoot.MenuAggregate.Permission">
            <summary>
            路由菜单表
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Permission.Name">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Permission.Code">
            <summary>
            菜单编号
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Permission.IsButton">
            <summary>
            是否为按钮
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Permission.IsHide">
            <summary>
            是否为隐藏菜单
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Permission.IsKeepAlive">
            <summary>
            是否KeepAlive
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Permission.Func">
            <summary>
            按钮事件
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Permission.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Permission.Enabled">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Permission.Sort">
            <summary>
            排序值
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Permission.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Permission.ParentId">
            <summary>
            上一级菜单Id
            </summary>
        </member>
        <member name="P:Yin.Domain.AggregateRoot.MenuAggregate.Permission.MoudleId">
            <summary>
            接口Id
            </summary>
        </member>
        <member name="P:Yin.Domain.Interfaces.IRepository`1.UnitOfWork">
            <summary>
            UnitOfWork
            </summary>
        </member>
        <member name="M:Yin.Domain.Interfaces.IRepository`1.Add(`0)">
            <summary>
            添加
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Yin.Domain.Interfaces.IRepository`1.AddRange(System.Collections.Generic.List{`0})">
            <summary>
            AddRange
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Yin.Domain.Interfaces.IRepository`1.GetAll">
            <summary>
            获取列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yin.Domain.Interfaces.IRepository`1.GetFirstOrDefaultNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String[])">
            <summary>
            GetFirstOrDefaultNoTracking
            </summary>
            <param name="express"></param>
            <param name="includes">导航属性</param>
            <returns></returns>
        </member>
        <member name="M:Yin.Domain.Interfaces.IRepository`1.GetFirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String[])">
            <summary>
            GetFirstOrDefault
            </summary>
            <param name="express"></param>
            <param name="includes">导航属性</param>
            <returns></returns>
        </member>
        <member name="M:Yin.Domain.Interfaces.IRepository`1.GetAll(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String[])">
            <summary>
            获取列表
            </summary>
            <param name="express"></param>
            <param name="includes"></param>
            <returns></returns>
        </member>
        <member name="M:Yin.Domain.Interfaces.IRepository`1.GetAllWithNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String[])">
            <summary>
            获取列表
            </summary>
            <param name="express"></param>
            <param name="includes"></param>
            <returns></returns>
        </member>
        <member name="M:Yin.Domain.Interfaces.IRepository`1.Exist(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            是否存在
            </summary>
            <param name="express"></param>
            <returns></returns>
        </member>
        <member name="M:Yin.Domain.Interfaces.IUnitOfWork.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>
            异步saveChange
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Yin.Domain.Interfaces.IUnitOfWork.SaveEntitiesAsync(System.Threading.CancellationToken)">
            <summary>
            发送领域事件 保存到数据库
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Yin.Domain.SeedWork.RecordableEntity.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Yin.Domain.SeedWork.RecordableEntity.Creator">
            <summary>
            创建人
            </summary>
        </member>
        <member name="P:Yin.Domain.SeedWork.RecordableEntity.ModifyTime">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Yin.Domain.SeedWork.RecordableEntity.ModifiedBy">
            <summary>
            修改人
            </summary>
        </member>
        <member name="P:Yin.Domain.SeedWork.RecordableEntity.IsDelete">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="T:Yin.Domain.SeedWork.ValueObject">
            <summary>
            值对象
            </summary>
        </member>
    </members>
</doc>
